{"version":3,"sources":["component/ImageGaleryItem/ImageGalleryItem.module.css","component/Modal/Modal.module.css","component/ImageGallery/ImageGallery.module.css","component/Button/Button.module.css","component/Loader/Spinner.module.css","component/SearchBar/SearchBar.js","component/ImageGaleryItem/ImageGaleryItem.js","component/ImageGallery/ImageGallery.js","component/Modal/Modal.js","component/Button/Button.js","component/Loader/Loader.js","API/apiService.jsx","App.js","reportWebVitals.js","index.js","component/SearchBar/SearchBar.module.css"],"names":["module","exports","SearchBar","state","searchQuery","handleChange","event","currentTarget","name","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","s","Searchbar","SearchForm","type","SearchForm_button","SearchForm_button_label","SearchForm_input","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","modalContent","id","onItemClick","webformatURL","src","alt","ImageGalleryItem_image","onClick","ImageGallery","handleOpenModal","e","target","images","map","image","Modal","handleBackdropClick","onBackdrop","content","Overlay","Button","onPress","defaultProps","Spinner","color","height","width","fetchImages","page","fetchUrl","fetch","then","res","json","App","visibleImages","isLoading","openModal","toggleModal","toggleLoading","hadleChangeQuery","query","handleNextPage","handleScroll","window","scrollTo","top","document","documentElement","scrollHeight","behavior","modalContentSet","itemId","element","find","largeImageURL","getData","hits","catch","error","console","log","message","finally","prevProps","isNotLastPage","length","btnEnable","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.983854de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__310oX\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__xFcPw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__289N7\",\"Modal\":\"Modal_Modal__11Scz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__205AE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1mVyA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__1JJkG\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./SearchBar.module.css\";\r\n\r\nclass SearchBar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    searchQuery: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchQuery } = this.state;\r\n    this.props.onSubmit(searchQuery);\r\n  };\r\n\r\n  render() {\r\n    const { searchQuery } = this.state;\r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={s.SearchForm_button}>\r\n            <span className={s.SearchForm_button_label}>Search</span>\r\n          </button>\r\n          <input\r\n            className={s.SearchForm_input}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            name=\"searchQuery\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n            value={searchQuery}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./ImageGalleryItem.module.css\";\r\n\r\nclass ImageGalleryItem extends Component {\r\n  static propTypes = {\r\n    onItemClick: PropTypes.func.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    webformatURL: PropTypes.string.isRequired,\r\n  };\r\n\r\n  modalContent = (id) => {\r\n    this.props.onItemClick(id);\r\n  };\r\n  render() {\r\n    const { id, webformatURL } = this.props;\r\n      return (\r\n         <li className={s.ImageGalleryItem}>\r\n      <img\r\n        src={webformatURL}\r\n        alt=\"\"\r\n        className={s.ImageGalleryItem_image}\r\n        onClick={() => this.modalContent(id)}\r\n      />\r\n          </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./ImageGallery.module.css\";\r\nimport ImageGalleryItem from \"../ImageGaleryItem/ImageGaleryItem\";\r\n\r\nclass ImageGallery extends Component {\r\n  static propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    onItemClick: PropTypes.func.isRequired,\r\n    images: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n      })\r\n    ).isRequired,\r\n  };\r\n\r\n  handleOpenModal = (e) => {\r\n    if (e.target !== e.currentTarget) {\r\n      this.props.onClick();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { images, onItemClick } = this.props;\r\n    return (\r\n      <ul className={s.ImageGallery} onClick={this.handleOpenModal}>\r\n        {images &&\r\n          images.map((image) => (\r\n            \r\n              <ImageGalleryItem  key={image.id} {...image} onItemClick={onItemClick} />\r\n            \r\n          ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","  \r\nimport React, { Component } from \"react\";\r\nimport { Portal } from 'react-portal';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./Modal.module.css\";\r\n\r\n// const modalRoot = document.getElementById(\"modal-root\");\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    onBackdrop: PropTypes.func.isRequired,\r\n    content: PropTypes.string.isRequired,\r\n  };\r\n\r\n  handleBackdropClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.onBackdrop();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { content } = this.props;\r\n    return (\r\n      <Portal>\r\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\r\n        <div className={s.Modal}>\r\n          <img src={content} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n        modalRoot\r\n        </Portal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./Button.module.css\";\r\n\r\nclass Button extends Component {\r\n  static defaultProps = {\r\n    name: \"Load more\",\r\n  };\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    onPress: PropTypes.func.isRequired,\r\n  };\r\n  render() {\r\n    const { onPress, name } = this.props;\r\n    return (\r\n      <button type=\"button\" onClick={onPress} className={s.Button}>\r\n        {name}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport s from \"./Spinner.module.css\";\r\n\r\nclass Spinner extends Component {\r\n  render() {\r\n    return (\r\n      <div className={s.Spinner}>\r\n        <Loader type=\"Puff\" color=\"#00BFFF\" height={50} width={50} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spinner;","const api = 'https://pixabay.com/api/?';\r\n\r\nconst key = '22346616-da93255f31f30d17d2f747f5d';\r\n\r\nconst fetchImages = (searchQuery, page) => {\r\n  const fetchUrl = `${api}q=${searchQuery}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`;\r\n  return fetch(fetchUrl).then((res) => res.json());\r\n};\r\n\r\nexport default fetchImages;","import React, { Component } from \"react\";\n\nimport SearchBar from \"./component/SearchBar/SearchBar\";\nimport ImageGallery from \"./component/ImageGallery/ImageGallery\";\nimport Modal from \"./component/Modal/Modal\";\nimport Button from \"./component/Button/Button\";\nimport Spinner from \"./component/Loader/Loader\";\n\nimport fetchImages from \"./API/apiService\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    modalContent: \"\",\n    searchQuery: \"\",\n    page: 1,\n    visibleImages: [],\n    isLoading: false,\n    openModal: false,\n  };\n\n  componentDidUpdate(prevProps, { searchQuery, page }) {\n    if (searchQuery !== this.state.searchQuery) {\n      this.getData();\n    }\n\n    if (page !== this.state.page) {\n      this.getData();\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(({ openModal }) => ({ openModal: !openModal }));\n  };\n\n  toggleLoading = () => {\n    this.setState(({ isLoading }) => ({ isLoading: !isLoading }));\n  };\n\n  hadleChangeQuery = (query) => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      visibleImages: [],\n    });\n  };\n\n  handleNextPage = () => {\n    this.setState(({ page }) => {\n      return {\n        page: page + 1,\n      };\n    });\n  };\n\n  handleScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  modalContentSet = (itemId) => {\n    const { visibleImages } = this.state;\n    const element = visibleImages.find(({ id }) => id === itemId);\n    this.setState({ modalContent: element.largeImageURL });\n  };\n\n  getData = () => {\n    const { searchQuery, page } = this.state;\n    this.toggleLoading();\n    fetchImages(searchQuery, page)\n      .then(({ hits }) => {\n        this.setState(({ visibleImages }) => {\n          return { visibleImages: [...visibleImages, ...hits] };\n        });\n      })\n      .then(this.handleScroll)\n      .catch((error) => console.log(error.message))\n      .finally(this.toggleLoading);\n  };\n\n  render() {\n    const {\n      visibleImages,\n      openModal,\n      modalContent,\n      isLoading,\n      page,\n    } = this.state;\n    const isNotLastPage = visibleImages.length / page === 12;\n    const btnEnable = visibleImages.length > 0 && !isLoading && isNotLastPage;\n    return (\n      <div className=\"App\">\n        <SearchBar onSubmit={this.hadleChangeQuery} />\n\n        <ImageGallery\n          images={visibleImages}\n          onClick={this.toggleModal}\n          onItemClick={this.modalContentSet}\n        />\n\n        {openModal && (\n          <Modal content={modalContent} onBackdrop={this.toggleModal} />\n        )}\n        {isLoading && <Spinner />}\n\n        {btnEnable && <Button name=\"Load more\" onPress={this.handleNextPage} />}\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__3nu_R\",\"SearchForm\":\"SearchBar_SearchForm__rGHxM\",\"SearchForm_button\":\"SearchBar_SearchForm_button__2F1t0\",\"SearchForm_button_label\":\"SearchBar_SearchForm_button_label__2uo4D\",\"SearchForm_input\":\"SearchBar_SearchForm_input__2aC7s\"};"],"sourceRoot":""}